[
    {
      "question": "Which of the following are characteristics of a natural key?",
      "correct": [
        "It exists in the real world and has business meaning",
        "It is a data attribute that uniquely identifies an entity"
      ],
      "incorrect": [
        "It is always created by the database system",
        "It requires an auto-increment feature",
        "It must be a numeric value"
      ],
      "hint": "Think about keys that exist naturally in your data and have real-world meaning."
    },
    {
      "question": "Which of the following are characteristics of an artificial key?",
      "correct": [
        "It is typically system-generated",
        "It has no business meaning",
        "It is designed specifically for database use"
      ],
      "incorrect": [
        "It must correspond to a real-world attribute",
        "It cannot be used as a primary key"
      ],
      "hint": "Consider keys that are created solely for database purposes rather than derived from the data itself."
    },
    {
      "question": "Which of the following are benefits of normalization?",
      "correct": [
        "Reduces data redundancy",
        "Improves data integrity",
        "Makes database maintenance easier",
        "Reduces the risk of update anomalies"
      ],
      "incorrect": [
        "Always improves query performance"
      ],
      "hint": "Think about the main purposes of organizing data into normal forms."
    },
    {
      "question": "Which of the following are characteristics of First Normal Form (1NF)?",
      "correct": [
        "Each table cell must contain a single value",
        "Each column must have a unique name",
        "Values in a column must be of the same domain/type",
        "Each row must be unique",
        "The order of rows and columns doesn't matter"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider the most basic requirements for a relational table structure."
    },
    {
      "question": "Which of the following are violations of First Normal Form (1NF)?",
      "correct": [
        "A table cell containing multiple values",
        "Repeating groups of columns",
        "Columns with arrays or lists of values",
        "Tables without a primary key"
      ],
      "incorrect": [
        "Having foreign key relationships"
      ],
      "hint": "Think about what breaks the atomic value requirement of 1NF."
    },
    {
      "question": "Which of the following are characteristics of Second Normal Form (2NF)?",
      "correct": [
        "The table is already in 1NF",
        "No non-key attribute is dependent on only part of the primary key"
      ],
      "incorrect": [
        "All attributes depend directly on the primary key",
        "The primary key must be a single column",
        "Transitive dependencies are eliminated"
      ],
      "hint": "Remember that 2NF is about removing partial dependencies on composite primary keys."
    },
    {
      "question": "Which of the following are violations of Second Normal Form (2NF)?",
      "correct": [
        "Having a non-key attribute that depends on only part of a composite primary key",
        "Having partial dependencies in a table with a composite primary key",
        "A table where some columns only relate to one part of a composite key"
      ],
      "incorrect": [
        "Having transitive dependencies",
        "Having a single-column primary key"
      ],
      "hint": "Focus on issues related to composite keys and partial dependencies."
    },
    {
      "question": "Which of the following are characteristics of Third Normal Form (3NF)?",
      "correct": [
        "The table is already in 2NF",
        "No non-key attribute depends on another non-key attribute",
        "Eliminates transitive dependencies"
      ],
      "incorrect": [
        "Requires that all non-key columns are independent of each other",
        "Requires decomposition of all many-to-many relationships"
      ],
      "hint": "3NF focuses on removing transitive dependencies between attributes."
    },
    {
      "question": "Which of the following are violations of Third Normal Form (3NF)?",
      "correct": [
        "A non-key attribute depends on another non-key attribute",
        "Presence of transitive dependencies",
        "Having an attribute that depends on something other than the primary key"
      ],
      "incorrect": [
        "Having a composite primary key",
        "Having multiple foreign keys"
      ],
      "hint": "Consider scenarios where a non-key attribute determines other non-key attributes."
    },
    {
      "question": "Which of the following are valid components of a CREATE TABLE statement?",
      "correct": [
        "Column definitions",
        "Data type specifications",
        "Constraint declarations",
        "Primary key definition",
        "Foreign key references"
      ],
      "incorrect": [
        
      ],
      "hint": "Think about all the elements needed to define a complete table structure."
    },
    {
      "question": "Which of the following are valid column constraints in SQL?",
      "correct": [
        "NOT NULL",
        "UNIQUE"
      ],
      "incorrect": [
        "MANDATORY",
        "REQUIRED",
        "NO DUPLICATES"
      ],
      "hint": "Consider standard SQL constraints that can be applied at the column level."
    },
    {
      "question": "Which of the following are required elements in a FOREIGN KEY constraint?",
      "correct": [
        "Referenced table name",
        "Referenced column name(s)",
        "REFERENCES keyword"
      ],
      "incorrect": [
        "CASCADE keyword",
        "SET NULL option"
      ],
      "hint": "Think about the minimum components needed to establish a relationship between tables."
    },
    {
      "question": "Which of the following are true about PRIMARY KEY constraints?",
      "correct": [
        "They ensure each row is uniquely identifiable",
        "They automatically create an index",
        "They implicitly enforce NOT NULL",
        "They can be defined at table or column level"
      ],
      "incorrect": [
        "A table can have multiple primary keys"
      ],
      "hint": "Consider the properties and behaviors of primary keys in relational databases."
    },
    {
      "question": "Which of the following are common SQL data types?",
      "correct": [
        "INTEGER",
        "VARCHAR",
        "DATE",
        "DECIMAL",
        "BOOLEAN"
      ],
      "incorrect": [
        
      ],
      "hint": "Think about the basic data types used across most SQL database systems."
    },
    {
      "question": "Which of the following is true about the DROP TABLE statement?",
      "correct": [
        "It permanently removes a table and all its data from the database"
      ],
      "incorrect": [
        "It temporarily disables access to a table",
        "It only removes the data but keeps the table structure",
        "It automatically creates a backup before deletion",
        "It can be used to drop multiple tables in a single statement"
      ],
      "hint": "Consider the primary purpose and behavior of the DROP TABLE command."
    },
    {
      "question": "Which of the following are valid operations in an ALTER TABLE statement?",
      "correct": [
        "Adding a new column",
        "Modifying a column's data type"
      ],
      "incorrect": [
        "Changing the table's owner",
        "Renaming the database",
        "Modifying data within the table"
      ],
      "hint": "Think about changes that can be made to an existing table structure."
    },
    {
      "question": "Which of the following are required in an INSERT INTO statement?",
      "correct": [
        "Table name",
        "Column values",
        "VALUES keyword"
      ],
      "incorrect": [
        "WHERE clause",
        "Column data types"
      ],
      "hint": "Consider the essential components needed to add new data to a table."
    },
    {
      "question": "Which of the following are true about the DELETE statement?",
      "correct": [
        "It removes rows from a table",
        "It can use a WHERE clause to specify which rows to delete",
        "It can trigger referential integrity actions",
        "It can delete all rows if no WHERE clause is specified"
      ],
      "incorrect": [
        "It can be used to delete specific columns"
      ],
      "hint": "Think about how DELETE operates and what it can and cannot do."
    },
    {
      "question": "Which of the following are components of an UPDATE statement?",
      "correct": [
        "Table name",
        "SET clause",
        "New values for columns",
        "WHERE clause (optional)",
        "Column names to be updated"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider all the parts needed to modify existing data in a table."
    },
    {
      "question": "Which of the following is a characteristic of a soft delete?",
      "correct": [
        "Using a flag or timestamp to mark records as deleted rather than physically removing them"
      ],
      "incorrect": [
        "Permanently removing data from disk storage",
        "Using the DELETE statement with no WHERE clause",
        "Automatic removal of data after a time period",
        "Using database triggers to encrypt deleted data"
      ],
      "hint": "Think about how data can be logically deleted while still being preserved in the database."
    },
    {
      "question": "Which of the following are required components of a CREATE TRIGGER statement?",
      "correct": [
        "Trigger name",
        "Triggering event (INSERT, UPDATE, DELETE)"
      ],
      "incorrect": [
        "Transaction isolation level",
        "Error handling procedures",
        "User permissions"
      ],
      "hint": "Consider the fundamental elements needed to define an automated database response."
    },
    {
      "question": "Which of the following are common methods for database scripting?",
      "correct": [
        "Using Python with a database connector library",
        "Writing Bash scripts that call SQL commands",
        "Creating PowerShell scripts to automate database tasks"
      ],
      "incorrect": [
        "Writing directly in assembly language",
        "Using HTML to format database output"
      ],
      "hint": "Think about programming and scripting languages commonly used to interact with databases."
    },
    {
      "question": "Which of the following are characteristics of Object-Relational Mapping (ORM)?",
      "correct": [
        "Maps database tables to programming language classes",
        "Allows manipulation of database records as objects",
        "Abstracts SQL queries into programming language methods",
        "Handles data type conversion between database and application"
      ],
      "incorrect": [
        "Requires manual writing of all SQL statements"
      ],
      "hint": "Consider how ORMs bridge the gap between relational databases and object-oriented programming."
    },
    {
      "question": "Which of the following are typically included in database logs?",
      "correct": [
        "Transaction start and end times",
        "SQL statements executed",
        "User identification information",
        "Error messages",
        "Changes made to data"
      ],
      "incorrect": [
        
      ],
      "hint": "Think about what information would be useful for monitoring, debugging, and auditing database activity."
    },
    {
      "question": "Which of the following are characteristics of a Globally Unique Identifier (GUID)?",
      "correct": [
        "It is a 128-bit value",
        "It is designed to be unique across distributed systems"
      ],
      "incorrect": [
        "It is always sequential",
        "It must be human-readable",
        "It can only be generated by a central authority"
      ],
      "hint": "Consider the properties that make GUIDs useful for distributed databases."
    },
    {
      "question": "Which of the following are characteristics of distributed databases?",
      "correct": [
        "Data is stored across multiple physical locations",
        "Requires coordination for maintaining data consistency",
        "Can improve availability and fault tolerance"
      ],
      "incorrect": [
        "Always uses a single schema across all nodes",
        "Cannot support transactions"
      ],
      "hint": "Think about how databases that span multiple servers or locations operate and their benefits."
    },
    {
      "question": "Which of the following are common types of database views?",
      "correct": [
        "Simple views (based on a single table)",
        "Complex views (based on multiple tables)",
        "Materialized views (stored physically)"
      ],
      "incorrect": [
        "Encrypted views",
        "Temporary views"
      ],
      "hint": "Consider the different ways views can be structured and implemented in databases."
    },
    {
      "question": "Which of the following are components of a CREATE VIEW statement?",
      "correct": [
        "View name",
        "SELECT statement",
        "AS keyword",
        "Column aliases (optional)"
      ],
      "incorrect": [
        "Physical storage location"
      ],
      "hint": "Think about what's needed to define a virtual table based on a query."
    },
    {
      "question": "Which of the following are characteristics of Common Table Expressions (CTEs)?",
      "correct": [
        "They are temporary result sets",
        "They use the WITH keyword",
        "They can be referenced in the main query",
        "They can be recursive",
        "They improve query readability"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider how CTEs are defined and used within SQL queries."
    },
    {
      "question": "Which of the following are requirements of the Payment Card Industry Data Security Standard (PCI-DSS)?",
      "correct": [
        "Encrypt transmission of cardholder data",
        "Maintain a vulnerability management program"
      ],
      "incorrect": [
        "Store full credit card numbers indefinitely",
        "Share all cardholder data with third parties",
        "Use default system passwords"
      ],
      "hint": "Think about security practices required for handling payment card information."
    },
    {
      "question": "Which of the following are principles of the General Data Protection Regulation (GDPR)?",
      "correct": [
        "Right to access personal data",
        "Right to be forgotten",
        "Data minimization"
      ],
      "incorrect": [
        "Mandatory data sharing with government agencies",
        "Unlimited data retention"
      ],
      "hint": "Consider the key rights and protections established by European data privacy regulations."
    },
    {
      "question": "Which of the following are components of informed consent for data collection/processing?",
      "correct": [
        "Clear explanation of what data is being collected",
        "Purpose of the data collection",
        "How long the data will be stored",
        "Information about who will have access to the data"
      ],
      "incorrect": [
        "Requirement to provide access to all personal devices"
      ],
      "hint": "Think about what information users need to make an informed decision about their data."
    },
    {
      "question": "Which of the following are components of a CREATE INDEX statement?",
      "correct": [
        "Index name",
        "Table name",
        "Column(s) to index",
        "Index type (optional)",
        "Sort order (ASC/DESC)"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider all the elements needed to define a database index."
    },
    {
      "question": "Which of the following are benefits of database indexes?",
      "correct": [
        "Faster data retrieval for queries",
        "Improved sorting performance",
        "More efficient join operations"
      ],
      "incorrect": [
        "Reduced storage space requirements",
        "Automatic data validation"
      ],
      "hint": "Think about how indexes improve database performance."
    },
    {
      "question": "Which of the following are costs or drawbacks of database indexes?",
      "correct": [
        "Increased storage space requirements",
        "Slower write operations (INSERT, UPDATE, DELETE)",
        "Additional maintenance overhead"
      ],
      "incorrect": [
        "Reduced query accuracy",
        "Inability to use foreign keys"
      ],
      "hint": "Consider the trade-offs that come with using database indexes."
    },
    {
      "question": "Which of the following are components of an EXPLAIN QUERY PLAN statement?",
      "correct": [
        "The SQL query to analyze",
        "EXPLAIN or EXPLAIN PLAN keywords"
      ],
      "incorrect": [
        "The maximum execution time",
        "Memory allocation settings",
        "CPU core assignment"
      ],
      "hint": "Think about what's needed to get a database to reveal its execution strategy for a query."
    },
    {
      "question": "Which of the following are common types of database indexes?",
      "correct": [
        "Clustered indexes (determine physical order of data)",
        "Non-clustered indexes (maintain a separate ordering)",
        "Covering indexes (include all columns needed by a query)"
      ],
      "incorrect": [
        "Virtual indexes (only exist during query execution)",
        "Symmetric indexes (automatically create reverse ordering)"
      ],
      "hint": "Consider the different ways indexes can be structured to improve various types of queries."
    },
    {
      "question": "Which of the following are characteristics of B-tree indexes?",
      "correct": [
        "Self-balancing tree data structure",
        "Efficient for range queries",
        "Good for equality comparisons",
        "Maintains sorted order"
      ],
      "incorrect": [
        "Optimized for full-text search"
      ],
      "hint": "Think about the properties that make B-trees the most common index structure in databases."
    },
    {
      "question": "Which of the following are characteristics of database transactions?",
      "correct": [
        "Logical unit of work that must succeed or fail as a whole",
        "Can contain multiple SQL statements",
        "Follow ACID properties",
        "Can be committed or rolled back",
        "Provide data consistency and integrity"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider what defines a transaction and its role in maintaining database integrity."
    },
    {
      "question": "Which of the following are aspects of transaction atomicity?",
      "correct": [
        "All operations in a transaction complete successfully or none do",
        "Partial transactions are never visible to other transactions"
      ],
      "incorrect": [
        "Transactions are processed in isolation from each other",
        "Data remains in a valid state before and after transactions",
        "Transaction results persist after system failures"
      ],
      "hint": "Think about the 'all or nothing' property of transactions."
    },
    {
      "question": "Which of the following are aspects of transaction consistency?",
      "correct": [
        "Database remains in a valid state before and after a transaction",
        "All integrity constraints are maintained",
        "Defined rules and relationships remain intact"
      ],
      "incorrect": [
        "All operations are performed as a single unit",
        "Changes are permanently saved"
      ],
      "hint": "Consider how transactions maintain the correctness and validity of the database."
    },
    {
      "question": "Which of the following are aspects of transaction isolation?",
      "correct": [
        "Concurrent transactions don't interfere with each other",
        "Changes made by incomplete transactions aren't visible to others",
        "Prevents dirty reads, non-repeatable reads, and phantom reads",
        "Can be set to different levels (READ UNCOMMITTED, READ COMMITTED, etc.)"
      ],
      "incorrect": [
        "Ensures all parts of a transaction complete or none do"
      ],
      "hint": "Think about how transactions are shielded from the effects of other concurrent transactions."
    },
    {
      "question": "Which of the following are aspects of transaction durability?",
      "correct": [
        "Committed transactions survive system failures",
        "Changes are permanently stored",
        "Transaction logs record changes for recovery",
        "Data can be restored after a crash",
        "Changes are written to non-volatile storage"
      ],
      "incorrect": [
        
      ],
      "hint": "Consider how databases ensure that completed transactions remain permanent."
    },
    {
      "question": "Which of the following are components of transaction control in SQL?",
      "correct": [
        "BEGIN TRANSACTION statement",
        "COMMIT statement",
        "ROLLBACK statement"
      ],
      "incorrect": [
        "FINALIZE statement",
        "CHECKPOINT statement"
      ],
      "hint": "Think about the SQL commands used to start, complete, or undo transactions."
    },
    {
      "question": "Which of the following are types of database locks?",
      "correct": [
        "Shared locks (multiple transactions can read)",
        "Exclusive locks (only one transaction can modify)",
        "Intent locks (signal future lock intentions)",
        "Update locks (hybrid between shared and exclusive)"
      ],
      "incorrect": [
        "Permanent locks (persist after transaction completion)"
      ],
      "hint": "Consider the different ways databases control concurrent access to data."
    },
    {
      "question": "Which of the following are characteristics of database deadlocks?",
      "correct": [
        "Two or more transactions are waiting for each other to release locks",
        "Neither transaction can proceed without the other releasing resources"
      ],
      "incorrect": [
        "They only occur with single-user databases",
        "They automatically resolve after a time limit",
        "They only happen with invalid SQL syntax"
      ],
      "hint": "Think about circular dependency situations in concurrent database access."
    },
    {
      "question": "Which of the following situations violate transaction atomicity?",
      "correct": [
        "A bank transfer debits one account but fails to credit the other",
        "A system crash occurs midway through a multi-step operation",
        "Some parts of a transaction are committed while others are rolled back"
      ],
      "incorrect": [
        "Two users can read the same data simultaneously",
        "A transaction reads data that has already been committed"
      ],
      "hint": "Consider scenarios where the 'all or nothing' property is broken."
    },
    {
      "question": "Which of the following situations violate transaction isolation?",
      "correct": [
        "A transaction reads data that has been modified but not yet committed by another transaction",
        "A transaction re-reads data and gets different results each time",
        "A transaction encounters new rows during repeated scans",
        "Changes made by one transaction are visible to other active transactions before commit"
      ],
      "incorrect": [
        "A completed transaction's changes are lost after system restart"
      ],
      "hint": "Think about interference between concurrent transactions that should be isolated from each other."
    },
    {
      "question": "Which of the following situations violate transaction consistency?",
      "correct": [
        "A negative balance is allowed in an account where the minimum should be zero",
        "A child record is created without a corresponding parent record",
        "A unique constraint is violated by a transaction",
        "Data values conflict with defined business rules after a transaction completes"
      ],
      "incorrect": [
        "A transaction takes longer than expected to complete"
      ],
      "hint": "Consider scenarios where the database ends up in an invalid state after a transaction."
    },
    {
      "question": "Which of the following situations violate transaction durability?",
      "correct": [
        "Committed changes disappear after a system crash",
        "Transaction logs are corrupted or lost",
        "Power failure causes recent commits to be lost",
        "Database files become corrupted after successful commits",
        "Backup restoration fails to include recent transactions"
      ],
      "incorrect": [
        
      ],
      "hint": "Think about cases where successfully committed transactions don't remain permanent."
    }
  ]